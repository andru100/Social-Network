{"ast":null,"code":"import _regeneratorRuntime from \"/home/andru/Documents/work/portfolio/social-network-frontend-portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/andru/Documents/work/portfolio/social-network-frontend-portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { useNavigate } from 'react-router-dom';\nexport default function Chkauth() {\n  return _Chkauth.apply(this, arguments);\n}\n\nfunction _Chkauth() {\n  _Chkauth = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var jwt, jwtObject, options, url, response, convert;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            //check if jwt is valid \n            //alert(\"chkauth running\")\n            jwt = localStorage.getItem('jwt_token');\n            console.log(\"got from storage:\", jwt); //const Navigate = useNavigate();\n\n            jwtObject = {\n              Data1: jwt\n            };\n            options = {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(jwtObject)\n            };\n            url = 'http://192.168.1.93:4001/chkauth';\n            _context.next = 7;\n            return fetch(url, options);\n\n          case 7:\n            response = _context.sent;\n            _context.next = 10;\n            return response.json();\n\n          case 10:\n            convert = _context.sent;\n            console.log(\"User password check complete:\");\n            console.log(response.status);\n\n            if (!(response.status === 401 || response.status === 400)) {\n              _context.next = 17;\n              break;\n            }\n\n            return _context.abrupt(\"return\", false);\n\n          case 17:\n            if (!(response.status === 200)) {\n              _context.next = 20;\n              break;\n            }\n\n            // if password is a match return auth'd username\n            //alert(\"user found chkauth returning user\")\n            console.log(\"authorized by api\", convert.AuthdUser);\n            return _context.abrupt(\"return\", convert.AuthdUser);\n\n          case 20:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _Chkauth.apply(this, arguments);\n}","map":{"version":3,"sources":["/home/andru/Documents/work/portfolio/social-network-frontend-portfolio/src/chkAuth.jsx"],"names":["useNavigate","Chkauth","jwt","localStorage","getItem","console","log","jwtObject","Data1","options","method","headers","body","JSON","stringify","url","fetch","response","json","convert","status","AuthdUser"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,wBAA8BC,OAA9B;AAAA;AAAA;;;sEAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0B;AACvC;AACMC,YAAAA,GAFO,GAEDC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAFC;AAGXC,YAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCJ,GAAjC,EAHW,CAIX;;AAEIK,YAAAA,SANO,GAMK;AACdC,cAAAA,KAAK,EAAEN;AADO,aANL;AAUPO,YAAAA,OAVO,GAUG;AACZC,cAAAA,MAAM,EAAE,MADI;AAEZC,cAAAA,OAAO,EAAE;AACP,gCAAgB;AADT,eAFG;AAKZC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,SAAf;AALM,aAVH;AAkBLQ,YAAAA,GAlBK,GAkBC,kCAlBD;AAAA;AAAA,mBAmBYC,KAAK,CAACD,GAAD,EAAMN,OAAN,CAnBjB;;AAAA;AAmBLQ,YAAAA,QAnBK;AAAA;AAAA,mBAoBWA,QAAQ,CAACC,IAAT,EApBX;;AAAA;AAoBLC,YAAAA,OApBK;AAqBTd,YAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACAD,YAAAA,OAAO,CAACC,GAAR,CAAYW,QAAQ,CAACG,MAArB;;AAtBS,kBAwBNH,QAAQ,CAACG,MAAT,KAAoB,GAApB,IAA2BH,QAAQ,CAACG,MAAT,KAAoB,GAxBzC;AAAA;AAAA;AAAA;;AAAA,6CA2BF,KA3BE;;AAAA;AAAA,kBA4BEH,QAAQ,CAACG,MAAT,KAAoB,GA5BtB;AAAA;AAAA;AAAA;;AA4B4B;AACrC;AACAf,YAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCa,OAAO,CAACE,SAAzC;AA9BS,6CA+BFF,OAAO,CAACE,SA/BN;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import { useNavigate } from 'react-router-dom';\n\nexport default async function Chkauth (){//check if jwt is valid \n  //alert(\"chkauth running\")\n    let jwt = localStorage.getItem('jwt_token');\n    console.log(\"got from storage:\", jwt)\n    //const Navigate = useNavigate();\n\n    let jwtObject = {\n      Data1: jwt\n    }\n\n    let options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(jwtObject),\n      }\n      \n      let url = 'http://192.168.1.93:4001/chkauth'\n      let response = await fetch(url, options)// post jwt\n      let convert = await response.json ()\n      console.log(\"User password check complete:\")\n      console.log(response.status)\n\n    if ( response.status === 401 || response.status === 400){// handle not a match\n      //alert(\"you not authorized to view this page please sign in\")\n      //Navigate(\"/signIn\")\n      return false   \n     } else if ( response.status === 200){ // if password is a match return auth'd username\n      //alert(\"user found chkauth returning user\")\n      console.log(\"authorized by api\", convert.AuthdUser)\n      return convert.AuthdUser\n     }\n} "]},"metadata":{},"sourceType":"module"}