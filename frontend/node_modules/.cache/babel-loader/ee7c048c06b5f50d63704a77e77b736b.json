{"ast":null,"code":"var _jsxFileName = \"/home/andru/Documents/work/dating-frontend-portfolio/src/routes/profileComponents/makePost.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home(props) {\n  async function sendCmt(msgType, iD) {\n    // sends username, password from input server then creates s3 bucket in username and stores details on mongo\n    const Post = {\n      // send starter post\n      MainCmt: document.getElementById('cmt').value,\n      // get username password and email\n      Time: new Date().toLocaleTimeString('en-GB', {\n        hour: \"numeric\",\n        minute: \"numeric\"\n      }),\n      Date: new Date().toLocaleDateString(),\n      Comments: [],\n      // begin sub comments \n      Likes: 0 // begin like\n\n    };\n    let reply = document.getElementById(iD).value; // get reply if reply cmt is there\n    // dsend start comment or reply to comment depending on is replychk false/true\n\n    let data = {\n      Username: userName,\n      Updatetype: '$set',\n      Key2updt: 'Posts',\n      isReply: msgType,\n      replyCmt: reply,\n      PostIndx: iD,\n      Value2updt: Post\n    }; // object containing fetch options for the put request\n\n    let options = {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    };\n    let postUrl = 'http://192.168.1.93:4001/postMsg'; // post request using options object\n\n    console.time(\"put response took\");\n    let response = await fetch(postUrl, options);\n    let convert = await response.json();\n    console.timeEnd(\"put response took\");\n    console.log(\"added comment updated document is:\");\n    console.log(convert);\n\n    if (response.status === 401 || response.status === 400) {\n      // handle not a match\n      alert(\"your comment wasnt added try again\"); // Navigate(\"/signIn\")\n      //return false   \n    } else if (response.status === 200) {\n      // if password is a match return auth'd username\n      console.log(\"pushed comment\");\n      console.log(convert.Posts);\n      setcmt(convert.Posts); //alert(\"pushed comment\")\n      //document.cookie = \"authjwt=\"+convert.token; // store data in cookie\n      //localStorage.setItem('jwt_token', convert.token) // Store JWT in storage\n      //alert(\"Welcome to the club! Please setup your profile\")\n      //Navigate (\"/profileSetup\")\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control rounded-corner\",\n          id: \"cmt\",\n          placeholder: \"Write a comment...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"input-group-btn p-l-10\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary f-s-12 rounded-corner\",\n            type: \"button\",\n            onClick: () => sendCmt(\"isCmt\", 0),\n            children: \"Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 13\n  }, this);\n}\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/andru/Documents/work/dating-frontend-portfolio/src/routes/profileComponents/makePost.jsx"],"names":["Home","props","sendCmt","msgType","iD","Post","MainCmt","document","getElementById","value","Time","Date","toLocaleTimeString","hour","minute","toLocaleDateString","Comments","Likes","reply","data","Username","userName","Updatetype","Key2updt","isReply","replyCmt","PostIndx","Value2updt","options","method","headers","body","JSON","stringify","postUrl","console","time","response","fetch","convert","json","timeEnd","log","status","alert","Posts","setcmt"],"mappings":"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","sourcesContent":["\nexport default function Home (props) {\n    async function sendCmt (msgType, iD) { // sends username, password from input server then creates s3 bucket in username and stores details on mongo\n  \n        const Post = { // send starter post\n           MainCmt : document.getElementById('cmt').value ,// get username password and email\n           Time : new Date().toLocaleTimeString('en-GB', { hour: \"numeric\", minute: \"numeric\"}),\n           Date : new Date().toLocaleDateString(),\n           Comments : [] ,// begin sub comments \n           Likes : 0 // begin like\n        }\n        \n        let reply = document.getElementById(iD).value // get reply if reply cmt is there\n          \n          // dsend start comment or reply to comment depending on is replychk false/true\n        let data = {Username: userName, Updatetype: '$set',\n                    Key2updt: 'Posts', isReply: msgType, replyCmt: reply, PostIndx: iD, Value2updt: Post\n        }\n    \n        // object containing fetch options for the put request\n        let options = {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n        }\n    \n        let postUrl = 'http://192.168.1.93:4001/postMsg'\n        // post request using options object\n        console.time(\"put response took\");\n        let response = await fetch(postUrl, options)\n        let convert = await response.json ()\n        console.timeEnd(\"put response took\");\n        console.log(\"added comment updated document is:\")\n        console.log(convert)\n    \n        if ( response.status === 401 || response.status === 400){// handle not a match\n          alert(\"your comment wasnt added try again\")\n          // Navigate(\"/signIn\")\n          //return false   \n         } else if ( response.status === 200){ // if password is a match return auth'd username\n          console.log(\"pushed comment\")\n          console.log(convert.Posts)\n          setcmt(convert.Posts)\n          //alert(\"pushed comment\")\n             //document.cookie = \"authjwt=\"+convert.token; // store data in cookie\n             //localStorage.setItem('jwt_token', convert.token) // Store JWT in storage\n          //alert(\"Welcome to the club! Please setup your profile\")\n             //Navigate (\"/profileSetup\")\n         }\n      }\n\n    return (\n            <div className=\"input\">\n            <form action=\"\">\n            <div className=\"input-group\">\n                <input type=\"text\" className=\"form-control rounded-corner\" id=\"cmt\" placeholder=\"Write a comment...\"/>\n                <span className=\"input-group-btn p-l-10\">\n                <button className=\"btn btn-primary f-s-12 rounded-corner\" type=\"button\" onClick={() => sendCmt(\"isCmt\", 0)}>Comment</button>\n                </span>\n            </div>\n            </form>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}