{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useNavigate } from 'react-router-dom';\nexport default async function chkauth() {\n  _s();\n\n  //check if jwt is valid \n  let jwt = localStorage.getItem('jwt_token');\n  console.log(\"got from storage:\", jwt);\n  const Navigate = useNavigate();\n  let jwtObject = {\n    Data1: jwt\n  };\n  let options = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(jwtObject)\n  };\n  let url = 'http://192.168.1.93:4001/chkauth';\n  let response = await fetch(url, options); // post jwt\n\n  let convert = await response.json();\n  console.log(\"User password check complete:\");\n  console.log(response.status);\n\n  if (response.status === 401 || response.status === 400) {\n    // handle not a match\n    alert(\"you not authorized to view this page please sign in\");\n    return false;\n  } else if (response.status === 200) {\n    // if password is a match return auth'd username\n    console.log(\"authorized by api\", convert.AuthdUser);\n    return convert.AuthdUser;\n  }\n}\n\n_s(chkauth, \"BsdYp51khjvN8P3D7sGmxzWyV1E=\", false, function () {\n  return [useNavigate];\n});","map":{"version":3,"sources":["/home/andru/Documents/work/dating-frontend-portfolio/src/chkAuth.jsx"],"names":["useNavigate","chkauth","jwt","localStorage","getItem","console","log","Navigate","jwtObject","Data1","options","method","headers","body","JSON","stringify","url","response","fetch","convert","json","status","alert","AuthdUser"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,eAAe,eAAeC,OAAf,GAAyB;AAAA;;AAAC;AACrC,MAAIC,GAAG,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAV;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCJ,GAAjC;AACA,QAAMK,QAAQ,GAAGP,WAAW,EAA5B;AAEA,MAAIQ,SAAS,GAAG;AACdC,IAAAA,KAAK,EAAEP;AADO,GAAhB;AAIA,MAAIQ,OAAO,GAAG;AACZC,IAAAA,MAAM,EAAE,MADI;AAEZC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFG;AAKZC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,SAAf;AALM,GAAd;AAQE,MAAIQ,GAAG,GAAG,kCAAV;AACA,MAAIC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,EAAMN,OAAN,CAA1B,CAlBkC,CAkBM;;AACxC,MAAIS,OAAO,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAApB;AACAf,EAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYW,QAAQ,CAACI,MAArB;;AAEF,MAAKJ,QAAQ,CAACI,MAAT,KAAoB,GAApB,IAA2BJ,QAAQ,CAACI,MAAT,KAAoB,GAApD,EAAwD;AAAC;AACvDC,IAAAA,KAAK,CAAC,qDAAD,CAAL;AACA,WAAO,KAAP;AACA,GAHF,MAGQ,IAAKL,QAAQ,CAACI,MAAT,KAAoB,GAAzB,EAA6B;AAAE;AACrChB,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCa,OAAO,CAACI,SAAzC;AACA,WAAOJ,OAAO,CAACI,SAAf;AACA;AACL;;GA9B6BtB,O;UAGTD,W","sourcesContent":["import { useNavigate } from 'react-router-dom';\n\nexport default async function chkauth (){//check if jwt is valid \n    let jwt = localStorage.getItem('jwt_token');\n    console.log(\"got from storage:\", jwt)\n    const Navigate = useNavigate();\n\n    let jwtObject = {\n      Data1: jwt\n    }\n\n    let options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(jwtObject),\n      }\n      \n      let url = 'http://192.168.1.93:4001/chkauth'\n      let response = await fetch(url, options)// post jwt\n      let convert = await response.json ()\n      console.log(\"User password check complete:\")\n      console.log(response.status)\n\n    if ( response.status === 401 || response.status === 400){// handle not a match\n      alert(\"you not authorized to view this page please sign in\")\n      return false   \n     } else if ( response.status === 200){ // if password is a match return auth'd username\n      console.log(\"authorized by api\", convert.AuthdUser)\n      return convert.AuthdUser\n     }\n} "]},"metadata":{},"sourceType":"module"}